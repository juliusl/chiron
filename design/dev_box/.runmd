# Building a dev box with cloud_init

# Cloud-init components
- These are different components that can be installed with cloud_init
```runmd
``` setup call
add    node_title                           .text Setup dev box
define accelerated-container-image install  .text cloud_init
define azcli                       install  .text cloud_init
define golang                      install  .text cloud_init 
define docker                      install  .text cloud_init
define bondcompiler                install  .text cloud_init
define cfssl                       install  .text cloud_init
define dotnet-sdk                  install  .text cloud_init
define gcm                         install  .text cloud_init
define git-server                  install  .text cloud_init
define gitlab                      install  .text cloud_init
define helm                        install  .text cloud_init
define kind                        install  .text cloud_init
define minikube                    install  .text cloud_init
define mkcert                      install  .text cloud_init
define overlaybd                   install  .text cloud_init
define rustlang                    install  .text cloud_init
```

# Setup for a devbox in an Azure environment
- This engine include the enter/exit blocks for setting up a vm on Azure.
- These parts need to be installed in a specific order, since cloud_init_enter add's some functions to overall `runcmd` script. 
``` runmd
``` setup_azure call 
add    node_title                   .text Setup cloud_init enter
define azure_enter         install  .text cloud_init_enter
define azure_exit          install  .text cloud_init_exit
```

## Example plugin definition
- For `azure`, you can use `MIME` message to package `cloud_init` parts.
- `make_mime` formats the message with each `part` defined in the block.
- The parts are combined into a mixed mime message and the output is written to the `user_data` file, specified by `file_dst`.
- After this plugin completes, the next step would be use the generated `.run/cloud_init/user_data` file for deployment.
``` runmd
``` package make_mime
add    work_dir             .text .config/cloud_init
add    file_dst             .text .run/cloud_init/user_data
define a_enter        part  .text enter-azure.yml_jinja2
define b_azcli        part  .text install-azcli.yml_jinja2
define c_golang       part  .text install-golang.yml_jinja2
define d_docker       part  .text install-docker.yml_jinja2
define e_exit         part  .text exit-azure.yml_jinja2
```

