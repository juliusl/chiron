# Background


## Cloud-init components
- These are different components that can be installed with cloud_init
```runmd
``` setup call
add    node_title                           .text Setup dev box
define accelerated-container-image install  .text cloud_init
define azcli                       install  .text cloud_init
define golang                      install  .text cloud_init 
define docker                      install  .text cloud_init
define bondcompiler                install  .text cloud_init
define cfssl                       install  .text cloud_init
define dotnet-sdk                  install  .text cloud_init
define gcm                         install  .text cloud_init
define git-server                  install  .text cloud_init
define gitlab                      install  .text cloud_init
define helm                        install  .text cloud_init
define kind                        install  .text cloud_init
define minikube                    install  .text cloud_init
define mkcert                      install  .text cloud_init
define overlaybd                   install  .text cloud_init
define rustlang                    install  .text cloud_init
```

## Setup for a devbox in an Azure environment
- This engine include the enter/exit blocks for setting up a vm on Azure.
- These parts need to be installed in a specific order, since cloud_init_enter add's some functions to overall `runcmd` script. 
``` runmd
``` setup_azure call 
add    node_title                   .text Setup cloud_init enter
define azure_enter         install  .text cloud_init_enter
define azure_exit          install  .text cloud_init_exit
```

## Example plugin definition
- For `azure`, you can use `MIME` message to package `cloud_init` parts.
- `make_mime` formats the message with each `part` defined in the block.
- The parts are combined into a mixed mime message and the output is written to the `user_data` file, specified by `file_dst`.
- After this plugin completes, the next step would be use the generated `.run/cloud_init/user_data` file for deployment.
``` runmd
``` package make_mime
add    work_dir             .text .config/cloud_init
add    file_dst             .text .run/cloud_init/user_data
define a_enter        part  .text enter-azure.yml_jinja2
define b_azcli        part  .text install-azcli.yml_jinja2
define c_golang       part  .text install-golang.yml_jinja2
define d_docker       part  .text install-docker.yml_jinja2
define e_exit         part  .text exit-azure.yml_jinja2
add default_open                .enable
add enable_connection           .enable
add node_title                  .text Package user data
```

# Deploying to Azure 

``` azure_devbox runtime
define user_data call .symbol deploy
define deploy    call 
```

``` user_data call
define user_data make_mime .symbol package
```

``` deploy call
define a_deploy install .symbol azure_vm
define b_deploy remote  .symbol azure_vm
```

``` runmd
``` azure_vm remote
add command .text sh .run/sh/make-vm.sh
define RESOURCE_GROUP  env      .symbol  resource_group
define VM_NAME         env      .symbol  vm_name
define IMAGE           env      .symbol  image
define LOCATION        env      .symbol  location
define ADMIN_USERNAME  env      .symbol  admin_username
define DEV_ID          env      .symbol  dev_id

add resource_group              .text   rg_name
add vm_name                     .text   vm_name
add image                       .text   ubuntu
add location                    .text   westus2
add admin_username              .text   chief
add dev_id                      .text   tgif5
add edit_form                   .enable
add default_open                .enable
add enable_connection           .enable
add current_dir                 .text .run/cloud_init
add description                 .text Create an Azure VM using the current user's .ssh config, and connect via ssh
add caveats                     .text If an ssh key is not present, one will be generated via --generate_ssh_keys
add node_title                  .text Deploy Azure VM
``` install
add work_dir                      .text   .run/sh
add file_src                      .text   lib/sh/make-vm.sh
```

# Appendix

``` runmd
``` required expect
define az  which                .text az
define ssh which                .text ssh
define sh  which                .text sh
define jq  which                .text jq
add stop_on_error               .enable
add default_open                .enable
add always_show                 .enable
add enable_connection           .enable
add node_title                  .text Check installation status
```

``` optional expect
define curl                 which   .text curl
define brew::macos          which   .text brew
define powershell::windows  which   .text powershell
```

``` dev_box lab 
add overview .text This lab will teach you how to customize a dev environment, using cloud_init parts.
```
