# Getting started with runmd
- Defining `default call` will enable chiron to bootstrap a runtime. 
- To use this feature drop a directory containing a `.runmd` file into chiron.
``` runmd
``` default call
define portal lab  .symbol portal
```

- This lab will prepare local environment, for building new dev boxes. In addition, this lab will launch and host a site for browsing documentation.
- Dropping individual `.runmd` files into the tool will scan for all engines adding them to the runtime. 
- For example, each row of `dev_box lab` would be available in the node editor for sequencing.
``` md
``` portal lab
define setup         call .symbol host
define host          call
add node_title      .text Host lab portal
add description     .text Builds and hosts the chiron portal
add project_src     .text design/portal/.runmd
```

- The above sequence is defined by adding `.symbol {engine_name}` after each `call` line.
- In the editor `dev_box lab` would be represented by a single node with the title "Dev box setup".
``` md
``` setup call
define a_host           clear    .text   empty
define b_host           process  .symbol compile_elm
```

# Hosting the lab portal
- This sequence compiles the elm app, installs the output, and then starts a server to host the app and an api to fetch `.runmd` files.
``` md
``` host call
define c_host           install  .symbol portal
define d_host           app_host .symbol portal
```

## Building portal code
- This plugin definition uses the built-in process plugin to define compiling the elm code.
- Note that the `current_dir` attribute is set for this particular process, which is required by the `elm` command. However, for most other cases this attribute does not need to be included. 
``` md
``` compile_elm process
add command                 .text   elm make src/Main.elm --output portal.js
add current_dir             .text   lib/elm/portal
```

- To check if elm is installed, the expect plugin can be used to check the path
``` md
``` compile_elm expect
define elm which            .text elm
```

- This takes the result of the `elm make` process and copies it to the work_dir of the repo.
``` md
``` portal install 
add work_dir                      .text   design/portal
add file_src                      .text   lib/elm/portal/portal.js
```

- Last, a server to host the lab portal starts. `lab.rs` implements the `app_host` in this case, so most of the routes and api's are defined in that file.
``` md
``` portal app_host
add node_title                   .text  Host lab app_host
add address                      .text  localhost:3000
```
